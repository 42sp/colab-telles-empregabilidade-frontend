/**
 * Tipo que representa uma opera√ß√£o/scrap no frontend.
 * Mantenha em sincronia com o backend (scrapOperations.schema.ts).
 */
export type Operation = {
  // ------------------------------
  // üîπ Identifica√ß√£o
  // ------------------------------
  id: number | string;          // id num√©rico prim√°rio do banco
  uuid?: string;       // uuid p√∫blico
  name: string;        // nome da opera√ß√£o
  type: string;       // tipo da opera√ß√£o
  status?: "Agendado" | "Em Execu√ß√£o" | "Conclu√≠do" | "Falha" |  "Exclu√≠da" | "Vencida"; // status da opera√ß√£o
  user_tag: string;    // identifica√ß√£o do usu√°rio que solicitou

  // ------------------------------
  // üîπ Agendamento
  // ------------------------------
  scheduled_date: string; // "YYYY-MM-DD"
  scheduled_time: string; // "HH:mm"
  repeat_days?: string;   // dias para repeti√ß√£o
  repeat_time?: string;   // hora da repeti√ß√£o

  // ------------------------------
  // üîπ Execu√ß√£o e Resultado
  // ------------------------------
  started_at?: string | null; // ISO date-time
  finished_at?: string | null; // ISO date-time
  result?: Record<string, any>; 
  error_message?: string | null;

  // ------------------------------
  // üîπ Auditoria
  // ------------------------------
  created_by?: string;     // usu√°rio que criou a opera√ß√£o
  created_at: string;     // data/hora da cria√ß√£o
  last_edited_by?: string; // √∫ltimo usu√°rio que editou
  last_edited_at?: string; // data/hora da √∫ltima edi√ß√£o

  // ------------------------------
  // üîπ Dele√ß√£o
  // ------------------------------
  deleted?: boolean;       // flag de dele√ß√£o
  deleted_by?: string;     // usu√°rio que deletou
  deleted_at?: string;     // data/hora da dele√ß√£o

  // ------------------------------
  // üîπ Campos extras do frontend
  // ------------------------------
  last_occurrence?: string | null;        // "YYYY-MM-DD" ou null
  last_occurrence_price?: number | string | null; // valor num√©rico ou formatado
};
